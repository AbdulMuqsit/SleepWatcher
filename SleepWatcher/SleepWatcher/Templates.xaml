<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:l="clr-namespace:SleepWatcher.Converters"
                    xmlns:patientViewModels="clr-namespace:SleepWatcher.ViewModel.PatientViewModel"
                    xmlns:view="clr-namespace:SleepWatcher.View"
                    xmlns:design="clr-namespace:SleepWatcher.Design"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:viewModel="clr-namespace:SleepWatcher.ViewModel"
                    mc:Ignorable="d">
    <viewModel:ViewModelLocator x:Key="Locator" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  
    <!--Single Patient view datatype triggers !-->
    <DataTemplate DataType="{x:Type patientViewModels:SinglePatientViewModel}">
        <view:SinglePatinetView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type design:DesignSinglePatientViewModel}">
        <view:SinglePatinetView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type patientViewModels:AddPatientViewModel}">
        <view:AddPatientView />
    </DataTemplate>
    <!-- Resource dictionary entries should be defined here. -->
    <!--Datatemplate for notes list box!-->
    <DataTemplate x:Key="NotesListBoxTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox Text="{Binding Text}"
                     Margin="5,5,0,0"
                     IsReadOnly="{Binding IsChecked, ElementName=IsReadOnly}"
                     AcceptsReturn="True"
                     AcceptsTab="True" />
            <ToggleButton x:Name="IsReadOnly"
                          IsChecked="False"
                          Grid.Column="1"
                          Margin="5,5,0,0"
                          MinWidth="20" />
        </Grid>
    </DataTemplate>
    <Style x:Key="AddNewNoteButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="#FFE4E4E4" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="#FFEE7A19"
                                  Offset="0.008" />
                    <GradientStop Color="#FFDC5700"
                                  Offset="0.984" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="5,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="#FFEE7A19"
                                              Offset="0.008" />
                                <GradientStop Color="#FFDC5700"
                                              Offset="0.984" />
                            </RadialGradientBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF1872D"
                                                      Offset="0.008" />
                                        <GradientStop Color="#FFEC782C"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFCA5F06"
                                                      Offset="0.012" />
                                        <GradientStop Color="#FFBE4D04"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxHeight"
                Value="50" />
        <Setter Property="Height"
                Value="20" />
    </Style>
    <Style x:Key="ButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="#FFE4E4E4" />
        <Setter Property="FontSize"
                Value="18.667" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="#FFEE7A19"
                                  Offset="0.008" />
                    <GradientStop Color="#FFDC5700"
                                  Offset="0.984" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight"
                Value="40" />
        <Setter Property="MinWidth"
                Value="80" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="#FFEE7A19"
                                              Offset="0.008" />
                                <GradientStop Color="#FFDC5700"
                                              Offset="0.984" />
                            </RadialGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                      Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0:0:0.1"
                                                                 Value="#FFCDCDCD" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF1872D"
                                                      Offset="0.008" />
                                        <GradientStop Color="#FFEC782C"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFCA5F06"
                                                      Offset="0.012" />
                                        <GradientStop Color="#FFBE4D04"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Steps list box datatemplate!-->
    <!-- list of patients datatemplate !-->
    <Style x:Key="CheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Foreground"
                Value="#FF707070" />
        <Setter Property="Margin"
                Value="5,5,5,0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="TextBlockStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="#FF707070" />
        <Setter Property="FontFamily"
                Value="Cambria" />
        <Setter Property="FontSize"
                Value="21.333" />
        <Setter Property="Margin"
                Value="5,5,0,0" />
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background"
                     Color="#FFACACAC" />
    <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#FFCDCDCD" />
    <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#FF686868" />
    <SolidColorBrush x:Key="Button.Disabled.Background"
                     Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground"
                     Color="#FF838383" />
    <SolidColorBrush x:Key="OptionMark.Static.Background"
                     Color="#FFFFFFFF" />
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background"
                     Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border"
                     Color="#FF5593FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph"
                     Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Background"
                     Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Border"
                     Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph"
                     Color="#FF707070" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Background"
                     Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Border"
                     Color="#FF3C77DD" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph"
                     Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Static.Glyph"
                     Color="#FF212121" />
    <Style x:Key="FilterCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource OptionMark.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="#FFB4B4B4" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="1"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="#FF834903"
                                      Margin="1"
                                      Opacity="0"
                                      Stretch="None" />
                                <Rectangle x:Name="indeterminateMark"
                                           Fill="{StaticResource OptionMark.Static.Glyph}"
                                           Margin="2"
                                           Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding"
                                    Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource OptionMark.MouseOver.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource OptionMark.MouseOver.Border}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource OptionMark.Disabled.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource OptionMark.Disabled.Border}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource OptionMark.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource OptionMark.Pressed.Background}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource OptionMark.Pressed.Border}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource OptionMark.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="1" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="0" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily"
                Value="Cambria" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="FontSize"
                Value="13.333" />
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Border"
                     Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border"
                     Color="#FF569DE5" />
    <Style x:Key="TextBoxStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground"
                Value="#FF646464" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="BorderBrush"
                Value="#FFBFBEBE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            CornerRadius="4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="Padding" Value="3"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AddViewTextBlockStyle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
                Value="#FF707070" />
        <Setter Property="FontFamily"
                Value="Cambria" />
        <Setter Property="FontSize"
                Value="21.333" />
        <Setter Property="Margin"
                Value="5,5,0,0" />
    </Style>
    <Style x:Key="BackButton"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="#FFE4E4E4" />
        <Setter Property="FontSize"
                Value="18.667" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="#FFEE7A19"
                                  Offset="0.008" />
                    <GradientStop Color="#FFDC5700"
                                  Offset="0.984" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="#FFEE7A19"
                                              Offset="0.008" />
                                <GradientStop Color="#FFDC5700"
                                              Offset="0.984" />
                            </RadialGradientBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF1872D"
                                                      Offset="0.008" />
                                        <GradientStop Color="#FFEC782C"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFCA5F06"
                                                      Offset="0.012" />
                                        <GradientStop Color="#FFBE4D04"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PatientsFocusVisualStyle"
           TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Background="#FFFF7604"
                          Opacity="0.5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="NoteTemplate">

        <StackPanel MinWidth="200"
                   >
            <StackPanel.Background>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                    <GradientStop Color="Black"
                                  Offset="1" />
                    <GradientStop Color="White"
                                  Offset="0.98" />
                </LinearGradientBrush>
            </StackPanel.Background>
            <TextBlock TextTrimming="CharacterEllipsis"
                       HorizontalAlignment="Left"
                       Foreground="#FF9B9B9B"><Run FontSize="12"
                                                   Text="{Binding Date}" /></TextBlock>
            <TextBlock HorizontalAlignment="Left"
                       Foreground="#FF4B4B4B"
                       FontSize="18"
                       FontFamily="Cambria"
                       Text="{Binding Title}" />
        </StackPanel>
    </DataTemplate>
    <Style x:Key="NotesPopupButtons"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="#FFE4E4E4" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="MinHeight"
                Value="40" />
        <Setter Property="MinWidth"
                Value="80" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="4,2,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF1872D"
                                                      Offset="0.008" />
                                        <GradientStop Color="#FFEC782C"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFCA5F06"
                                                      Offset="0.012" />
                                        <GradientStop Color="#FFBE4D04"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                    <GradientStop Color="Black"
                                  Offset="1" />
                    <GradientStop Color="White"
                                  Offset="0.983" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddNewNote"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource Button.Static.Background}" />

        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />

        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />

        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="4"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.MouseOver.Background}" />

                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Pressed.Background}" />

                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource Button.Disabled.Background}" />

                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="#FFE4E4E4" />
        <Setter Property="FontSize"
                Value="10.667" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="#FFEE7A19"
                                  Offset="0.008" />
                    <GradientStop Color="#FFDC5700"
                                  Offset="0.984" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Border.Background>
                            <RadialGradientBrush>
                                <GradientStop Color="#FFEE7A19"
                                              Offset="0.008" />
                                <GradientStop Color="#FFDC5700"
                                              Offset="0.984" />
                            </RadialGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                      Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0:0:0.1"
                                                                 Value="#FFCDCDCD" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF1872D"
                                                      Offset="0.008" />
                                        <GradientStop Color="#FFEC782C"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFCA5F06"
                                                      Offset="0.012" />
                                        <GradientStop Color="#FFBE4D04"
                                                      Offset="0.984" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment"
                Value="Center" />
    </Style>
    <SolidColorBrush x:Key="ListBoxesFocus"
                     Color="#4FC6C5"
                     Opacity="0.3" />
    <SolidColorBrush x:Key="ListBoxesSelected"
                     Color="#0AB9B4"
                     Opacity="0.5" />
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />

        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}" />
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}" />
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}" />

        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="Padding"
                Value="4,2" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="ListBoxItemRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Uid="ListBoxItemRoot">
                        <ContentPresenter x:Name="ListBoxItemContent"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          Uid="ListBoxItemContent"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.BasedOn>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="AutomationProperties.AutomationId"
                        Value="{Binding FullName}" />
                <Setter Property="AutomationProperties.Name"
                        Value="{Binding DisplayName}" />
                <Setter Property="Margin" Value="3"></Setter>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsSelected"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                        Value="{StaticResource ListBoxesFocus}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ListBoxesFocus}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ListBoxesFocus}" />
            </MultiTrigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource ListBoxesSelected}" />
                <Setter Property="Foreground"
                        Value="{StaticResource ListBoxesSelected}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ListBoxesSelected}" />
            </Trigger>
            
        </Style.Triggers>
    </Style>
</ResourceDictionary>