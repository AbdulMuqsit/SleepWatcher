<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SleepWatcher.View"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="SleepWatcher.View.SinglePatinetView"
             mc:Ignorable="d" 
             d:DesignHeight="506" d:DesignWidth="748" Template="{DynamicResource UserControlControlTemplate1}">
    <UserControl.Resources>
        <ControlTemplate x:Key="UserControlControlTemplate1" TargetType="{x:Type UserControl}">
            <Grid >
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="BusyStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" To="Busy">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.2"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Busy" GeneratedDuration="0">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.2"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Busy">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.2"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="stackPanel">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Free"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding SinglePatientViewModel.IsBusy}" Value="False">
                        <ei:GoToStateAction StateName="Free"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding SinglePatientViewModel.IsBusy}" Value="True">
                        <ei:GoToStateAction StateName="Busy"/>
                    </ei:DataTrigger>
                </i:Interaction.Triggers>
                <Grid x:Name="AddPatient" Visibility="Collapsed">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>

                    <TextBlock  Grid.Row="1" Text="Add New Patient" HorizontalAlignment="Center" Foreground="#FF7F7F80" FontSize="32" FontFamily="Trebuchet MS"/>
                    <Button Grid.Row="2" HorizontalAlignment="Center" Content="+" MinWidth="80" MinHeight="50"   BorderBrush="{x:Null}" Margin="0,20,0,0" Style="{DynamicResource ButtonStyle1}" Command="{Binding SinglePatientViewModel.SwitchToAddPatientViewModelCommand, Mode=OneWay}"/>
                </Grid>
                <Grid x:Name="ViewPatient" Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding SinglePatientViewModel.Patient.FullName, Mode=OneWay}" Foreground="#FF636363" FontSize="32" Margin="5,5,0,0"/>
                    <Button Grid.Row="0" Style="{StaticResource ButtonStyle}" Command="{Binding SinglePatientViewModel.ClearView}"  HorizontalAlignment="Right" VerticalAlignment="Center" MinHeight="30" MinWidth="30" Content="X"/>
                    <ListBox Grid.Row="1"  ItemsSource="{Binding SinglePatientViewModel.Patient.StepModels}" ItemTemplate="{StaticResource StepsListBoxTemplate}" HorizontalContentAlignment="Stretch" SelectedItem="{Binding SinglePatientViewModel.SelectedStep, Mode=OneWayToSource}"/>
                    <Rectangle x:Name="rectangle" HorizontalAlignment="Stretch" Grid.RowSpan="1" StrokeThickness="6" VerticalAlignment="Stretch" Fill="Gray" Grid.Row="1" Margin="5" Visibility="Collapsed" Opacity="0"/>
                    <StackPanel x:Name="stackPanel" VerticalAlignment="Center"  HorizontalAlignment="Center" Orientation="Vertical" Grid.Row="2" Visibility="Collapsed" Opacity="0">
                        <Ellipse x:Name="ellipse" Height="50" Width="50"  StrokeThickness="6" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.Effect>
                                <DropShadowEffect Color="#FFCFB79A" Opacity="0.5"/>
                            </Ellipse.Effect>
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFC9C9C9" Offset="1"/>
                                    <GradientStop Color="#FFEC9C28" Offset="0.3"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <TextBlock  Margin="5" HorizontalAlignment="Center" Style="{DynamicResource TextBlockStyle}" Foreground="#FF727272" FontSize="18.667">
                            <TextBlock.Effect>
                                <DropShadowEffect Opacity="0.3"/>
                            </TextBlock.Effect><Run Text="Please Wait"/></TextBlock>
                        <TextBlock HorizontalAlignment="Center" Margin="5" Style="{DynamicResource TextBlockStyle}" Foreground="#FF727272" FontSize="18.667" >
                            <TextBlock.Effect>
                                <DropShadowEffect Opacity="0.3"/>
                            </TextBlock.Effect><Run Text="{Binding PatientViewModel.BusyMessage}"/><Run Text=" "/><Run Text="..."/></TextBlock>

                    </StackPanel>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding SinglePatientViewModel.Patient}" Value="{x:Null}">
                    <Setter TargetName="ViewPatient" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="AddPatient" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#FFBFBEBE"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="#FF7F7F80"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1,0,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="200" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFD1D1D1"/>
                                <Setter Property="Foreground" Value="#FF979799"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="#FF6B6B6C"/>
                                <Setter Property="Background" Value="#FFAEAEAE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="FontFamily" Value="Arial"/>
        </Style>

    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Mode="OneWay" Source="{StaticResource Locator}"/>
    </UserControl.DataContext>


</UserControl>
