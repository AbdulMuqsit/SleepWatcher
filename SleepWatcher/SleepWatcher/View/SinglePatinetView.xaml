<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:SleepWatcher.View"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:converters="clr-namespace:SleepWatcher.Converters"
             x:Class="SleepWatcher.View.SinglePatinetView"
             mc:Ignorable="d"
             d:DesignHeight="506"
             d:DesignWidth="748"
             x:Name="SinglePatient"
             Template="{DynamicResource SinplePatientControlTemplate}">
    <UserControl.Resources>
        <!-- Steps list box datatemplate!-->
        <DataTemplate x:Key="StepsListBoxItemsTemplate">
            <DataTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)"
                                                   Storyboard.TargetName="grid">
                        <DiscreteObjectKeyFrame KeyTime="0">
                            <DiscreteObjectKeyFrame.Value>
                                <Cursor>Hand</Cursor>
                            </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                            <DiscreteObjectKeyFrame.Value>
                                <Cursor>AppStarting</Cursor>
                            </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.7">
                            <DiscreteObjectKeyFrame.Value>
                                <Cursor>Arrow</Cursor>
                            </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard"
                            TargetName="StepGrid"
                            TargetProperty="Opacity">

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="StepGrid">
                        <EasingDoubleKeyFrame KeyTime="0"
                                              Value="0" />
                        <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                              Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="popupclose">
                	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                		<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                	</DoubleAnimationUsingKeyFrames>
                	<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(Popup.IsOpen)" Storyboard.TargetName="popup">
                		<DiscreteBooleanKeyFrame KeyTime="0:0:0.3" Value="False"/>
                	</BooleanAnimationUsingKeyFrames>
                </Storyboard>
            </DataTemplate.Resources>
            <Grid Margin="0,5,0,0" x:Name="StepGrid">
                <Grid.Resources>
                    <converters:EnumStringToFriendlyNameConverter x:Key="EnumConverter" />
                </Grid.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove"
                                    SourceName="grid"
                                    SourceObject="{Binding ElementName=grid}">
                        <i:InvokeCommandAction Command="{Binding NotesViewModel.LoadNotes, Source={StaticResource Locator}}"
                                               CommandParameter="{Binding Id}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseDown"
                                    SourceName="grid"
                                    SourceObject="{Binding ElementName=grid}">
                        <i:InvokeCommandAction Command="{Binding NotesViewModel.SwitchToNotesViewCommand, Source={StaticResource Locator}}"
                                               CommandParameter="{Binding Id}" />
                    </i:EventTrigger>
                    <ei:DataTrigger Binding="{Binding Count}" Value="0" Comparison="NotEqual">
                    	<ei:GoToStateAction StateName="NotZero" TargetObject="{Binding ElementName=StepGrid}" UseTransitions="False"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Count}" Value="0" Comparison="Equal">
                    	<ei:GoToStateAction StateName="Zero" TargetObject="{Binding ElementName=StepGrid}" UseTransitions="False"/>
                    </ei:DataTrigger>
                </i:Interaction.Triggers>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="Notes">
                        <VisualState x:Name="Zero">
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)"
                                                                Storyboard.TargetName="textBlock1">
                                    <DiscreteBooleanKeyFrame KeyTime="0"
                                                             Value="False" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="NotZero" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1"
                                         StartPoint="0.5,0">
                        <GradientStop Color="Black"
                                      Offset="1" />
                        <GradientStop Offset="0.972"
                                      Color="White" />
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Step: "
                               Style="{DynamicResource TextBlockStyle}"
                               FontWeight="Bold" />
                    <TextBlock Text="{Binding StepName, Converter={StaticResource EnumConverter}}"
                               Style="{DynamicResource TextBlockStyle}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Row="0"
                            Grid.Column="1">
                    <StackPanel.Resources>
                        <Style x:Key="TooltipPopupStyle"
                               TargetType="{x:Type Popup}">
                            <Style.Resources>
                                <Storyboard BeginTime="0:0:0"
                                            x:Key="Storyboard1"
                                            FillBehavior="HoldEnd">
                                    <BooleanAnimationUsingKeyFrames  Storyboard.TargetProperty="(Popup.IsOpen)"
                                                                     Storyboard.TargetName="{x:Null}">
                                        <DiscreteBooleanKeyFrame  KeyTime="0:0:0.7"
                                                                  Value="True" />

                                    </BooleanAnimationUsingKeyFrames>

                                </Storyboard>
                                <Storyboard x:Key="Storyboard2" />
                            </Style.Resources>
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=grid}"
                                             Value="True">

                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="OpenPopupStoryBoard"
                                                         Storyboard="{StaticResource Storyboard1}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <PauseStoryboard BeginStoryboardName="OpenPopupStoryBoard" />
                                        <BeginStoryboard  Storyboard="{StaticResource Storyboard2}"
                                                          x:Name="ClosePopupStoryBoard" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>

                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <PauseStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="OpenPopupStoryBoard" />
                                        <ResumeStoryboard BeginStoryboardName="ClosePopupStoryBoard" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>

                    <Popup  Style="{StaticResource TooltipPopupStyle}"
                            DataContext="{Binding NotesViewModel, Source={StaticResource Locator}}"
                            AllowsTransparency="True"
                            Placement="Top"
                            x:Name="popup"
                            StaysOpen="False">
                        <Border x:Name="border" Background="#CCFFFFFF"
                                BorderThickness="1"
                                BorderBrush="Black"
                                Margin="20">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.5"
                                                  BlurRadius="10"
                                                  Direction="360" />
                            </Border.Effect>
                            <Grid Height="Auto"
                                  Width="Auto">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock HorizontalAlignment="Left"
                                           Margin="5"
                                           Text="Notes"
                                           Foreground="#FFDC5700"
                                           FontSize="26.667" />
                                <Button Grid.Row="1"
                                        Style="{StaticResource AddNewNoteButtonStyle}"
                                        HorizontalAlignment="Left"
                                        Content="New Note"
                                        Command="{Binding SingleNoteViewModel.SwitchToSingleNoteViewCommand, Source={StaticResource Locator}}"
                                        CommandParameter="{Binding Step.Id}" />
                                <Button x:Name="button" Grid.Row="0"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource AddNewNoteButtonStyle}"
                                        Content="X" />
                                <ListBox Grid.Row="2"
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                         HorizontalContentAlignment="Left"
                                         Height="Auto"
                                         ItemTemplate="{DynamicResource NoteTemplate}"
                                         ItemsSource="{Binding Notes}"
                                         DataContext="{Binding}"
                                         MaxHeight="300"
                                         Background="{x:Null}"
                                         SelectedItem="{Binding SingleNoteViewModel.Note, Mode=OneWayToSource, Source={StaticResource Locator}}" />
                            </Grid>
                        </Border>
                    </Popup>

                    <TextBlock Margin="10,5,0,0"
                               FontWeight="Bold"
                               Text="Status: "
                               Style="{DynamicResource TextBlockStyle}" />
                    <TextBlock x:Name="textBlock"
                               Text="{Binding Status}"
                               Style="{DynamicResource TextBlockStyle}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="0,0,0,5">
                    <TextBlock FontWeight="Bold"
                               Style="{DynamicResource TextBlockStyle}"
                               Text="Start Date: " />
                    <TextBlock Style="{DynamicResource TextBlockStyle}"
                               Text="{Binding DateStarted, Mode=OneWay}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="0,0,0,5">
                    <TextBlock FontWeight="Bold"
                               Margin="10,5,0,0"
                               Style="{DynamicResource TextBlockStyle}"
                               Text="Due Date: " />
                    <TextBlock Style="{DynamicResource TextBlockStyle}"
                               Text="{Binding DueDate, Mode=OneWay}" />
                </StackPanel>
                <Grid x:Name="grid"
                	Grid.Row="0"
                	Grid.Column="2"
                	Margin="5,5,5,0">
                	<TextBlock x:Name="textBlock1"
                		TextWrapping="Wrap"
                		TextAlignment="Center"
                		FontFamily="Cambria"
                		FontSize="18.667"
                		Grid.Column="0"
                		Margin="0"
                		LineHeight="26.667"><Run Foreground="#FF707070"
                			FontWeight="Bold"
                			FontSize="21.333"
                			Text="Notes"
                			TextDecorations="Underline" /><Run Foreground="#FF707070"
                			FontWeight="Bold"
                			FontSize="21.333"
                			Text=":" /><Run Text=" " /><Run Foreground="#FFFF9C00"
                			Text="{Binding Count}" /><InlineUIContainer /></TextBlock>
                </Grid>
                <Button x:Name="btnCancled"
                        Content="Mark Canceled"
                        Style="{DynamicResource AddNewNoteButtonStyle}"
                        HorizontalAlignment="Right"
                        Command="{Binding SinglePatientViewModel.MarkCanceledCommand,  Mode=OneWay}"
                        MinWidth="100"
                        Margin="5,8,5,5"
                        Grid.Row="0"
                        Grid.Column="3"
                        Height="Auto"
                        VerticalAlignment="Center"
                        DataContext="{DynamicResource Locator}"
                        Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" />
                <Button x:Name="btnCompleted"
                        Content="Mark Completed"
                        Style="{DynamicResource AddNewNoteButtonStyle}"
                        HorizontalAlignment="Right"
                        Command="{Binding SinglePatientViewModel.MarkCompleteCommand, Mode=OneWay}"
                        MinWidth="100"
                        Margin="5,2,5,5"
                        Grid.Column="3"
                        Height="Auto"
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        DataContext="{DynamicResource Locator}"
                        Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" />
                <Button Content="New Note"
                        Grid.Column="2"
                        HorizontalAlignment="Stretch"
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        Style="{DynamicResource AddNewNote}"
                        Margin="5"
                        CommandParameter="{Binding Id}"
                        Command="{Binding SingleNoteViewModel.SwitchToSingleNoteViewCommand, Source={StaticResource Locator}}" />
            </Grid>
            
            <DataTemplate.Triggers>
        		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="button"/>
        		<EventTrigger SourceName="StepGrid"
        			RoutedEvent="FrameworkElement.Loaded">
        			<BeginStoryboard Storyboard="{StaticResource Storyboard}"/>
        		</EventTrigger>

        		<Trigger Property="IsMouseOver"
        			Value="True"
        			SourceName="grid">
        			<Trigger.EnterActions>
        				<BeginStoryboard x:Name="Storyboard1_BeginStoryboard"
        					Storyboard="{StaticResource Storyboard1}" />
        			</Trigger.EnterActions>
        			<Trigger.ExitActions>
        				<StopStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard" />
        			</Trigger.ExitActions>
        		</Trigger>

        		<DataTrigger Binding="{Binding IsCompleted}"
        			Value="True">
        			<Setter TargetName="textBlock"
        				Property="Foreground"
        				Value="Green" />
        			<Setter TargetName="btnCompleted"
        				Property="Visibility"
        				Value="Collapsed" />
        			<Setter TargetName="btnCancled"
        				Property="Visibility"
        				Value="Collapsed" />
        		</DataTrigger>
        		<DataTrigger Binding="{Binding Status}"
        			Value="Ongoing">
        			<Setter TargetName="textBlock"
        				Property="Foreground"
        				Value="DarkOrange" />
        		</DataTrigger>
        		<DataTrigger Binding="{Binding Status}"
        			Value="Overdue">
        			<Setter TargetName="textBlock"
        				Property="Foreground"
        				Value="Red" />
        		</DataTrigger>
        		<DataTrigger Binding="{Binding IsCancled}"
        			Value="True">
        			<Setter TargetName="textBlock"
        				Property="Foreground"
        				Value="Black" />
        			<Setter TargetName="btnCompleted"
        				Property="Visibility"
        				Value="Collapsed" />
        			<Setter TargetName="btnCancled"
        				Property="Content"
        				Value="Uncancel" />
        		</DataTrigger>

        	</DataTemplate.Triggers>
        </DataTemplate>
        <ControlTemplate x:Key="SinplePatientControlTemplate"
                         TargetType="{x:Type UserControl}">

            <Grid x:Name="RootElement">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="BusyStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"
                                              To="Busy">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="rectangle">
                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="rectangle">
                                        <EasingDoubleKeyFrame KeyTime="0"
                                                              Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                                              Value="0.2" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <EasingDoubleKeyFrame KeyTime="0"
                                                              Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                                              Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Busy"
                                              GeneratedDuration="0">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="rectangle">
                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                Value="{x:Static Visibility.Visible}" />
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.6"
                                                                Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                Value="{x:Static Visibility.Visible}" />
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.6"
                                                                Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="rectangle">
                                        <EasingDoubleKeyFrame KeyTime="0"
                                                              Value="0.2" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                                              Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <EasingDoubleKeyFrame KeyTime="0"
                                                              Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                                              Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Busy">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                               Storyboard.TargetName="rectangle">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6"
                                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                                          Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                               Storyboard.TargetName="stackPanel">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6"
                                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="stackPanel">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                                          Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Free" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding SinglePatientViewModel.IsBusy}"
                                    Value="False">
                        <ei:GoToStateAction StateName="Free"
                                            TargetObject="{Binding ElementName=RootElement}" />
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding SinglePatientViewModel.IsBusy}"
                                    Value="True">
                        <ei:GoToStateAction StateName="Busy"
                                            TargetObject="{Binding ElementName=RootElement}" />
                    </ei:DataTrigger>
                    <i:EventTrigger SourceName="ViewPatient" >
                        <ei:GoToStateAction StateName="Free" UseTransitions="False"
                                            TargetObject="{Binding ElementName=RootElement}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid x:Name="ViewPatient"
                      Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"
                               Text="{Binding SinglePatientViewModel.Patient.FullName, Mode=OneWay}"
                               Foreground="#FF636363"
                               FontSize="32"
                               Margin="5,0,0,0" />
                    <ListBox Grid.Row="1"
                             ScrollViewer.CanContentScroll="False"
                             ItemsSource="{Binding SinglePatientViewModel.Patient.StepModels}"
                             ItemTemplate="{StaticResource StepsListBoxItemsTemplate}"
                             HorizontalContentAlignment="Stretch"
                             SelectedItem="{Binding SinglePatientViewModel.SelectedStep, Mode=OneWayToSource}" />
                    <Button Grid.Row="0"
                            Style="{DynamicResource BackButton}"
                            Command="{Binding AddPatientButtonViewModel.SwitchToAddPatientButtonViewModelCommand}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Margin="0,5,5,5"
                            Height="25">
                        <Image Height="15"
                               Width="15"
                               Margin="5"
                               Source="../Resources/back.png" />
                    </Button>
                    <Rectangle x:Name="rectangle"
                               HorizontalAlignment="Stretch"
                               Grid.Row="1"
                               StrokeThickness="6"
                               VerticalAlignment="Stretch"
                               Fill="Gray"
                               Margin="5"
                               Visibility="Collapsed"
                               Opacity="0" />
                    <StackPanel x:Name="stackPanel"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Orientation="Vertical"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Margin="5"
                                Visibility="Collapsed"
                                Opacity="0">
                        <Grid Width="50">
                            <Ellipse x:Name="ellipse"
                                     StrokeThickness="6"
                                     RenderTransformOrigin="0.5,0.5"
                                     Height="49">
                                <Ellipse.Effect>
                                    <DropShadowEffect Color="#FFCFB79A"
                                                      Opacity="0.5" />
                                </Ellipse.Effect>
                                <Ellipse.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         MappingMode="RelativeToBoundingBox"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#FFC9C9C9"
                                                      Offset="1" />
                                        <GradientStop Color="#FFEC9C28"
                                                      Offset="0.3" />
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                            </Ellipse>
                            <Ellipse x:Name="ellipse1"
                                     StrokeThickness="6"
                                     RenderTransformOrigin="0.5,0.5"
                                     Height="49">
                                <Ellipse.Resources>
                                    <Storyboard x:Key="BusyAnimation"
                                                RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                                                       Storyboard.TargetName="ellipse1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:2"
                                                                  Value="360" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Ellipse.Resources>
                                <i:Interaction.Triggers>
                                    <ei:DataTrigger Binding="{Binding SinglePatientViewModel.IsBusy}"
                                                    Value="True">
                                        <ei:ControlStoryboardAction ControlStoryboardOption="Play"
                                                                    Storyboard="{StaticResource BusyAnimation}" />
                                    </ei:DataTrigger>
                                    <ei:DataTrigger Binding="{Binding SinglePatientViewModel.IsBusy}"
                                                    Value="False">
                                        <ei:ControlStoryboardAction ControlStoryboardOption="Stop"
                                                                    Storyboard="{StaticResource BusyAnimation}" />
                                    </ei:DataTrigger>
                                </i:Interaction.Triggers>
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                                <Ellipse.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         MappingMode="RelativeToBoundingBox"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#FFC9C9C9"
                                                      Offset="1" />
                                        <GradientStop Color="#FFEC9C28"
                                                      Offset="0.3" />
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                            </Ellipse>
                        </Grid>
                        <TextBlock Margin="5"
                                   HorizontalAlignment="Center"
                                   Style="{DynamicResource TextBlockStyle}"
                                   Foreground="#FF727272"
                                   FontSize="18.667">
                            <TextBlock.Effect>
                                <DropShadowEffect Opacity="0.3" />
                            </TextBlock.Effect><Run Text="Please Wait" /></TextBlock>
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="5"
                                   Style="{DynamicResource TextBlockStyle}"
                                   Foreground="#FF727272"
                                   FontSize="18.667">
                            <TextBlock.Effect>
                                <DropShadowEffect Opacity="0.3" />
                            </TextBlock.Effect><Run Text="{Binding SinglePatientViewModel.BusyMessage}" /></TextBlock>
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="5"
                                   Style="{DynamicResource TextBlockStyle}"
                                   Foreground="#FF727272"
                                   FontSize="18.667">
                            <TextBlock.Effect>
                                <DropShadowEffect Opacity="0.3" />
                            </TextBlock.Effect><Run Text="..." /></TextBlock>

                    </StackPanel>
                </Grid>

            </Grid>

        </ControlTemplate>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Mode="OneWay"
                 Source="{StaticResource Locator}" />
    </UserControl.DataContext>
</UserControl>