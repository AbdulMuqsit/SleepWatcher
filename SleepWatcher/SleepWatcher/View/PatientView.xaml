<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SleepWatcher.View"
    xmlns:ViewModel="clr-namespace:SleepWatcher.ViewModel"
    xmlns:patientViewModels="clr-namespace:SleepWatcher.ViewModel.PatientViewModel"
    xmlns:view="clr-namespace:SleepWatcher.View"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="SleepWatcher.View.PatientView"
    mc:Ignorable="d"
    d:DesignHeight="696" d:DesignWidth="893" Template="{DynamicResource PatientViewTemplate}">
    <UserControl.Resources>
        <ControlTemplate x:Key="PatientViewTemplate" TargetType="{x:Type UserControl}">
        	<ControlTemplate.Resources>
        		
        	</ControlTemplate.Resources>
                   <Grid x:Name="grid" FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="BusyStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" To="Busy">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="rectangle">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="rectangle">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.2" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                    Storyboard.TargetName="grid1">
                                        <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Busy" GeneratedDuration="0" To="Free">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="rectangle">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.2" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="rectangle">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.6"
                                                                Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="stackPanel">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.6"
                                                                Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                    Storyboard.TargetName="grid1">
                                        <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0.6" Value="True" />
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Free" />
                        <VisualState x:Name="Busy">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="stackPanel">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                               Storyboard.TargetName="stackPanel">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                               Storyboard.TargetName="rectangle">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.2" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                               Storyboard.TargetName="rectangle">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)"
                                                                Storyboard.TargetName="grid1">
                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="170" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition MinWidth="300" Width="2.2*" />
                </Grid.ColumnDefinitions>
                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding PatientViewModel.IsBusy}" Value="True">
                        <ei:GoToStateAction StateName="Busy" TargetObject="{Binding ElementName=grid}" />
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding PatientViewModel.IsBusy}" Value="False">
                        <ei:GoToStateAction StateName="Free" TargetObject="{Binding ElementName=grid}" />
                    </ei:DataTrigger>
                </i:Interaction.Triggers>

                <TextBlock Foreground="#FFE05F06" FontSize="40" FontFamily="Cambria" FontWeight="Bold"
                           Margin="10,10,0,2"
                           IsHitTestVisible="False">
                    <Run Text="Patients" />
                </TextBlock>
                <!--Patients list box-->
                <ListBox x:Name="listBox" Grid.Row="2" Margin="10,0,5,5"
                         ItemTemplate="{DynamicResource ListBoxItemsTemplate}"
                         HorizontalAlignment="Stretch" ItemsSource="{Binding PatientViewModel.Patients}"
                         SelectedItem="{Binding SinglePatientViewModel.Patient}" HorizontalContentAlignment="Stretch" />
                <!--Seperator-->
                <GridSplitter Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Column="1"
                              Grid.RowSpan="2" Width="3" />
                <!--Add user View Part-->
                <ContentControl Grid.Row="1" Grid.RowSpan="2" Margin="5" Grid.Column="2"
                                Content="{Binding PatientViewModel.CurrentViewModel}" />
                <!--Busy State Parts-->
                <Rectangle x:Name="rectangle" Margin="10,0,5,5" Grid.Row="2" Visibility="Collapsed" Grid.Column="0"
                           VerticalAlignment="Stretch" Fill="Gray" HorizontalAlignment="Stretch" Opacity="0" />
                <StackPanel x:Name="stackPanel" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Orientation="Vertical"
                            Grid.Row="2" Visibility="Collapsed" Opacity="0">
                    <Grid Width="50">
                        <Ellipse x:Name="ellipse" StrokeThickness="6" RenderTransformOrigin="0.5,0.5" Height="50">
                            <Ellipse.Effect>
                                <DropShadowEffect Color="#FFCFB79A" Opacity="0.5" />
                            </Ellipse.Effect>
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="#FFC9C9C9" Offset="1" />
                                    <GradientStop Color="#FFEC9C28" Offset="0.3" />
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <Ellipse x:Name="ellipse1" StrokeThickness="6" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.Resources>
                                <Storyboard x:Key="BusyAnimation" RepeatBehavior="Forever">
                                    <DoubleAnimationUsingKeyFrames
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                        Storyboard.TargetName="ellipse1">
                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="360" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Ellipse.Resources>
                            <i:Interaction.Triggers>
                                <ei:DataTrigger Binding="{Binding PatientViewModel.IsBusy}" Value="True">
                                    <ei:ControlStoryboardAction ControlStoryboardOption="Play"
                                                                Storyboard="{StaticResource BusyAnimation}" />
                                </ei:DataTrigger>
                                <ei:DataTrigger Binding="{Binding PatientViewModel.IsBusy}" Value="False">
                                    <ei:ControlStoryboardAction ControlStoryboardOption="Stop"
                                                                Storyboard="{StaticResource BusyAnimation}" />
                                </ei:DataTrigger>
                            </i:Interaction.Triggers>
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                            <Ellipse.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="#FFC9C9C9" Offset="1" />
                                    <GradientStop Color="#FFEC9C28" Offset="0.3" />
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                    </Grid>
                    <TextBlock Margin="5" HorizontalAlignment="Center" Style="{DynamicResource TextBlockStyle}"
                               Foreground="#FF727272" FontSize="18.667">
                        <TextBlock.Effect>
                            <DropShadowEffect Opacity="0.3" />
                        </TextBlock.Effect>
                        <Run Text="Please Wait" />
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Center" Margin="5" Style="{DynamicResource TextBlockStyle}"
                               Foreground="#FF727272" FontSize="18.667">
                        <TextBlock.Effect>
                            <DropShadowEffect Opacity="0.3" />
                        </TextBlock.Effect>
                        <Run Text="{Binding PatientViewModel.BusyMessage}" />
                    </TextBlock>
                    <TextBlock HorizontalAlignment="Center" Margin="5" Style="{DynamicResource TextBlockStyle}"
                               Foreground="#FF727272" FontSize="18.667">
                        <TextBlock.Effect>
                            <DropShadowEffect Opacity="0.3" />
                        </TextBlock.Effect>
                        <Run Text="..." />
                    </TextBlock>

                </StackPanel>
                <Grid Margin="5,0,5,5" Grid.Row="1">
                    <Grid.Resources>
                        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}"
                               BasedOn="{StaticResource TextBoxStyle}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Grid>
                                            <TextBox
                                                Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                                x:Name="textSource"
                                                Background="Transparent"
                                                Panel.ZIndex="2" />
                                            <TextBox Text="{TemplateBinding Tag}"
                                                     Background="{TemplateBinding Background}"
                                                     Panel.ZIndex="1">
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="Foreground" Value="Transparent" />
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding Text, Source={x:Reference textSource}}"
                                                                Value="">
                                                                <Setter Property="Foreground" Value="LightGray" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                            </TextBox>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox x:Name="SearchTextBox" Style="{StaticResource placeHolder}" Margin="5" Tag="Search"
                             Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                             Text="{Binding PatientViewModel.SearchText, Delay=500, UpdateSourceTrigger=PropertyChanged}" />

                    <Grid x:Name="grid1" Grid.Row="1" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />

                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <CheckBox Margin="5" IsChecked="{Binding PatientViewModel.ShowOngoing}" Content="Ongoing"
                                      Style="{DynamicResource FilterCheckBoxStyle}"
                                      Command="{Binding PatientViewModel.FilterOngoing}" />
                            <CheckBox Margin="9,5,5,5" IsChecked="{Binding PatientViewModel.ShowOverDue}"
                                      Content="Overdue"
                                      Style="{DynamicResource FilterCheckBoxStyle}"
                                      Command="{Binding PatientViewModel.FilterOverdue}" />
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,-3,0,2">
                            <CheckBox Margin="5,0" IsChecked="{Binding PatientViewModel.ShowCanceled}"
                                      Content="Canceled"
                                      Style="{DynamicResource FilterCheckBoxStyle}"
                                      Command="{Binding PatientViewModel.FilterCnacled}" />
                            <CheckBox Margin="5,0" IsChecked="{Binding PatientViewModel.ShowCompleted}"
                                      Content="Completed"
                                      Style="{DynamicResource FilterCheckBoxStyle}"
                                      Command="{Binding PatientViewModel.FilterCompleted}" />
                        </StackPanel>
                        <ComboBox Grid.Column="1" Grid.Row="0" FontSize="10" Text="Step" Margin="5"
                                  HorizontalAlignment="Right" Width="Auto" Height="20"
                                  ItemsSource="{Binding PatientViewModel.StepFilters}"
                                  SelectedValue="{Binding PatientViewModel.StepNameFilterString}" />
                        <Button Style="{StaticResource ButtonStyle}" Grid.Row="1" Grid.Column="1" MinHeight="0"
                                MinWidth="0" Margin="5,-1,5,0" FontSize="10" HorizontalAlignment="Right"
                                Command="{Binding PatientViewModel.ReverseSortCommand}" Content="Reverse" />
                    </Grid>
                </Grid>
               


            </Grid>

        </ControlTemplate>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Mode="OneWay" Source="{StaticResource Locator}" />
    </UserControl.DataContext>
</UserControl>